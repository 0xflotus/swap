{"name":"Swap","tagline":"Exchange rates library for PHP 5.3+","body":"# Swap [![Build status][travis-image]][travis-url] [![Insight][insight-image]][insight-url] [![Version][version-image]][version-url] [![License][license-image]][license-url]\r\n\r\nSwap helps you to retrieve exchange rates from various providers. It leverages their ability to retrieve multiple quotes\r\nat once, while simulating this behavior for those who don't support it by sending parallel HTTP requests.\r\n\r\n> If you want to use this library with Symfony2, you can install [FlorianvSwapBundle] (https://github.com/florianv/FlorianvSwapBundle).\r\n\r\n## Installation\r\n\r\nAdd this line to your `composer.json` file:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"florianv/swap\": \"~1.0\"\r\n    }\r\n}\r\n```\r\n\r\n## Usage\r\n\r\nFirst, you need to create a provider:\r\n\r\n```php\r\n$client = new \\Guzzle\\Http\\Client();\r\n$yahoo = new \\Swap\\Provider\\YahooFinance($client);\r\n```\r\n\r\nThen you can add it to Swap:\r\n\r\n```php\r\n$swap = new \\Swap\\Swap();\r\n$swap->addProvider($yahoo);\r\n```\r\n\r\nYour job is to create a currency pair and Swap will set its rate:\r\n\r\n```php\r\n// Create the currency pair EUR/USD\r\n$pair = new \\Swap\\Model\\CurrencyPair('EUR', 'USD');\r\n\r\n// Quotes the pair\r\n$swap->quote($pair);\r\n\r\n// 1.3751\r\necho $pair->getRate();\r\n```\r\n\r\nWe created a currency pair `EUR/USD`, quoted it with the `YahooFinance` provider and got `1.3751` as rate\r\nwhich means that `1 EUR` is exchanged for `1.3751 USD`.\r\n\r\n> Currencies are expressed as their [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) code.\r\n\r\n### Multiple pairs\r\n\r\nYou can also quote multiple pairs at once:\r\n\r\n```php\r\nuse Swap\\Model\\CurrencyPair;\r\n\r\n$eurUsd = new CurrencyPair('EUR', 'USD');\r\n$usdGbp = new CurrencyPair('USD', 'GBP');\r\n$gbpJpy = new CurrencyPair('GBP', 'JPY');\r\n\r\n$swap->quote(array($eurUsd, $usdGbp, $gbpJpy));\r\n\r\n// 1.3751\r\necho $eurUsd->getRate();\r\n\r\n// 0.5938\r\necho $usdGbp->getRate();\r\n\r\n// 171.5772\r\necho $gbpJpy->getRate();\r\n```\r\n\r\n### Date\r\n\r\nYou can also retrieve the date at which the rate was calculated:\r\n\r\n```php\r\n// $date is a \\DateTime instance\r\n$date = $pair->getDate()\r\n```\r\n\r\n### Chained providers\r\n\r\nProviders can be chained so when one of them fails, the next one can be used to quote the pairs\r\nthat were not processed.\r\n\r\n```php\r\n$yahoo = new \\Swap\\Provider\\YahooFinance($client);\r\n$google = new \\Swap\\Provider\\GoogleFinance($client);\r\n\r\n$swap->addProvider($yahoo);\r\n$swap->addProvider($google);\r\n```\r\n\r\n### Exception Handling\r\n\r\nSwap throws different types of exceptions:\r\n\r\n```php\r\ntry {\r\n    $swap->quote($pair);\r\n} catch (\\Swap\\Exception\\QuotationException $e) {\r\n\r\n    // Default exception when the quote operation failed\r\n    // For example when the HTTP request failed\r\n\r\n} catch (\\Swap\\Exception\\UnsupportedBaseCurrencyException $e) {\r\n\r\n    // Exception thrown when a currency is not supported as base by the provider\r\n\r\n} catch (\\Swap\\Exception\\UnsupportedCurrencyPairException $e) {\r\n\r\n    // Exception thrown when the currency pair is not supported\r\n}\r\n```\r\n\r\n## Providers\r\n\r\n- [European Central Bank](http://www.ecb.europa.eu/home/html/index.en.html)\r\nSupports only EUR as base currency.\r\n- [Google Finance](http://www.google.com/finance)\r\nSupports multiple currencies as base and quote currencies.\r\n- [Open Exchange Rates](https://openexchangerates.org)\r\nSupports only USD as base currency for the free version and multiple ones for the enterprise version.\r\n- [Xignite](https://www.xignite.com)\r\nYou must have access to the `XigniteGlobalCurrencies` API.\r\nSupports multiple currencies as base and quote currencies.\r\n- [Yahoo Finance](https://finance.yahoo.com/)\r\nSupports multiple currencies as base and quote currencies.\r\n- [WebserviceX](http://www.webservicex.net/ws/default.aspx)\r\nSupports multiple currencies as base and quote currencies.\r\n\r\n## License\r\n\r\n[MIT](https://github.com/florianv/swap/blob/master/LICENSE)\r\n\r\n[travis-url]: https://travis-ci.org/florianv/swap\r\n[travis-image]: https://travis-ci.org/florianv/swap.svg?branch=master\r\n\r\n[insight-url]: https://insight.sensiolabs.com/projects/825d1c3f-839b-47e6-969a-7ddefffe94b1\r\n[insight-image]: https://insight.sensiolabs.com/projects/825d1c3f-839b-47e6-969a-7ddefffe94b1/mini.png\r\n\r\n[license-url]: https://packagist.org/packages/florianv/swap\r\n[license-image]: http://img.shields.io/packagist/l/florianv/swap.svg\r\n\r\n[version-url]: https://packagist.org/packages/florianv/swap\r\n[version-image]: http://img.shields.io/packagist/v/florianv/swap.svg\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}