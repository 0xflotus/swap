{"name":"Swap","tagline":"Exchange rates library for PHP 5.3+","body":"# Swap\r\n\r\nSwap helps you to retrieve exchange rates from various providers. It leverages their ability to retrieve multiple quotes\r\nat once, while simulating this behavior for those who don't support it by sending parallel HTTP requests.\r\n\r\n> If you want to use this library with Symfony2, you can install [FlorianvSwapBundle] (https://github.com/florianv/FlorianvSwapBundle).\r\n\r\n## Installation\r\n\r\nAdd this line to your `composer.json` file:\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"florianv/swap\": \"~1.0\"\r\n    }\r\n}\r\n```\r\n\r\nCurrently Guzzle 3 and 4 are supported HTTP clients, so you will need to require one of them too.\r\n\r\n- `\"guzzle/guzzle\": \"~3.0\"`\r\n- `\"guzzlehttp/guzzle\": \"~4.0\"`\r\n\r\n## Usage\r\n\r\nFirst, you need to create an adapter:\r\n\r\n```php\r\n// Creating a Guzzle 3 adapter\r\n$adapter = new \\Swap\\Adapter\\Guzzle3Adapter(new \\Guzzle\\Http\\Client());\r\n\r\n// Creating a Guzzle 4 adapter\r\n$adapter = new \\Swap\\Adapter\\Guzzle4Adapter(new \\GuzzleHttp\\Client());\r\n```\r\n\r\n> For BC reasons, it is still possible to pass $adapter = new \\Guzzle\\Http\\Client(); as adapter\r\n> but it will be removed in version 2.0.\r\n\r\nThen, you can create a provider and add it to Swap:\r\n\r\n```php\r\n// Creating a YahooFinance provider\r\n$yahoo = new \\Swap\\Provider\\YahooFinance($adapter);\r\n\r\n// Instantiating Swap and adding the provider\r\n$swap = new \\Swap\\Swap();\r\n$swap->addProvider($yahoo);\r\n```\r\n\r\nNow, your job is to create a currency pair and Swap will set its rate:\r\n\r\n```php\r\n// Creating the currency pair EUR/USD\r\n$pair = \\Swap\\Model\\CurrencyPair::createFromString('EUR/USD');\r\n\r\n// Quoting the pair\r\n$swap->quote($pair);\r\n\r\n// 1.3751\r\necho $pair;\r\n\r\n// 1.3751\r\necho $pair->getRate();\r\n```\r\n\r\nWe created a currency pair `EUR/USD`, quoted it with the `YahooFinance` provider and got `1.3751` as rate\r\nwhich means that `1 EUR` is exchanged for `1.3751 USD`.\r\n\r\n> Currencies are expressed as their [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) code.\r\n\r\n### Multiple pairs\r\n\r\nYou can also quote multiple pairs at once:\r\n\r\n```php\r\nuse Swap\\Model\\CurrencyPair;\r\n\r\n$eurUsd = CurrencyPair::createFromString('EUR/USD');\r\n$usdGbp = CurrencyPair::createFromString('USD/GBP');\r\n$gbpJpy = CurrencyPair::createFromString('GBP/JPY');\r\n\r\n$swap->quote(array($eurUsd, $usdGbp, $gbpJpy));\r\n\r\n// 1.3751\r\necho $eurUsd;\r\n\r\n// 0.5938\r\necho $usdGbp;\r\n\r\n// 171.5772\r\necho $gbpJpy;\r\n```\r\n\r\n### Date\r\n\r\nYou can also retrieve the date at which the rate was calculated:\r\n\r\n```php\r\n// $date is a \\DateTime instance\r\n$date = $pair->getDate()\r\n```\r\n\r\n### Chained providers\r\n\r\nProviders can be chained so when one of them fails, the next one can be used to quote the pairs\r\nthat were not processed.\r\n\r\n```php\r\n$yahoo = new \\Swap\\Provider\\YahooFinance($client);\r\n$google = new \\Swap\\Provider\\GoogleFinance($client);\r\n\r\n$swap->addProvider($yahoo);\r\n$swap->addProvider($google);\r\n```\r\n\r\n## Providers\r\n\r\n- [European Central Bank](http://www.ecb.europa.eu/home/html/index.en.html)\r\nSupports only EUR as base currency.\r\n- [Google Finance](http://www.google.com/finance)\r\nSupports multiple currencies as base and quote currencies.\r\n- [Open Exchange Rates](https://openexchangerates.org)\r\nSupports only USD as base currency for the free version and multiple ones for the enterprise version.\r\n- [Xignite](https://www.xignite.com)\r\nYou must have access to the `XigniteGlobalCurrencies` API.\r\nSupports multiple currencies as base and quote currencies.\r\n- [Yahoo Finance](https://finance.yahoo.com/)\r\nSupports multiple currencies as base and quote currencies.\r\n- [WebserviceX](http://www.webservicex.net/ws/default.aspx)\r\nSupports multiple currencies as base and quote currencies.\r\n\r\n## License\r\n\r\n[MIT](https://github.com/florianv/swap/blob/master/LICENSE)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}